# -*- coding: utf-8 -*-
"""listy_wielowymiarowe_podmien_znaki.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BjhKpbnGfxsVjrhNnOKxlYZLm-pzgjbS

Napisz program, który pobiera od użytkownika dodatnią liczbę naturalną n i
tworzy listę o rozmiarze n × n. Następnie program powinien wypełnić utworzoną
listę, tak by a[i][j] = + jeżeli liczby (i + 1) oraz (j + 1) są względnie pierwsze,
tzn. nie mają wspólnych dzielników poza 1. W pozostałych przypadkach .. Tak
utworzoną listę należy wypisać na ekranie. Przykład:
Podaj liczbę (> 0): 10



1 2 3 4 5 6 7 8 9 10

1 + + + + + + + + + +

2 + . + . + . + . + .

3 + + . + + . + + . +

4 + . + . + . + . + .

5 + + + + . + + + + .

6 + . . . + . + . . .

7 + + + + + + . + + +

8 + . + . + . + . + .

9 + + . + + . + + . +

10 + . + . . . + . + .
"""

n = int(input("podaj dodatnią liczbę całkowitą: "))
ls = [ [el for el in range(1,n+1)] for el in range(1,n+1)]


def check_relatively_prime(number1, number2):         
    for i in range(2,number2+1):                   
        if number1%i == 0 and number2%i ==0:    
            return False
    return True


def replace_list(ls):                   
    for row in range(n):   
        for column in range(n):
            number1 = row + 1   
            number2 = column + 1   
            if check_relatively_prime(number1,number2):
               ls[row][column] = "+"
            else:
             ls[row][column] = "."
    return ls


ls2 = replace_list(ls)
for row in ls2:
    print(row)