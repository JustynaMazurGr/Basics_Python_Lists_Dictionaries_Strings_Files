# -*- coding: utf-8 -*-
"""zmiana_liczby_w_lanc_znakow_na_int.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o6YIMEeD5VVHHDQJ9IOmb-DGDuCNpI59

Zdefiniować funkcję strToInt(str) , która zamienia liczbę całkowitą zapisaną w postaci łańcucha na liczbę całkowitą typu int. Z tym, że w podanym łańcuchu znaków mogą pojawiać się nie tylko cyfry – co nie powinno spowodować błędu, a jedynie przerwanie dalszego działania.

Funkcja powinna przerywać konwersję w momencie napotkania pierwszego znaku nie należącego do zapisu liczby, zatem np. dla strToInt("-13krowa") wynikiem powinno być -13.

Pozostałe przykłady:

strToInt("+12") - wynik 12

strToInt("0001") - wynik 1

strToInt("991-234-23") - wynik 991

strToInt("+zonk") - wynik 0

strToInt("") - wynik 0

strToInt("-12e5") - wynik -12*10^5 = -120000

strToInt("-12e-5") - wynik -12, tylko dodatnie wykładniki są rozpatrywane
"""

def strToInt(str):


    lista = []
    if str.startswith("-"):                         
        lista.append("-")
        for i in str[1:len(str)]:                   
            if i.isalpha() and i != "e" or i == "-":
                break
            if i.isdigit() or i == "e":
                lista.append(i)
        wynik = "".join(lista)           
        if lista == []:
            wynik = 0
        if wynik.endswith("e"):         
            wynik = wynik.rstrip("e")   
    else:
        for i in str:
            if i == "-" or i.isalpha():
                break
            if i.isdigit():
                lista.append(i)
        if lista == []:
            wynik = 0
        else:
            wynik = "".join(lista)


    wynik = float(wynik)
    wynik = int(wynik)

    return wynik

tekst = "-12e-5"
s = strToInt(tekst)
print("wynik",s)